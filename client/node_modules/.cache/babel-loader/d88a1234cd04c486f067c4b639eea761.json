{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sophi\\\\Desktop\\\\Videomenthe - Challenge\\\\player-upload\\\\front\\\\src\\\\components\\\\Upload\\\\index.js\";\n\n/* UPLOAD - INDEX.JS */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Upload extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      nameVideo: '',\n      fileVideo: '',\n      listVideo: []\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.nameVideo);\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const dataFile = {\n        nameVideo: this.state.nameVideo,\n        fileVideo: this.state.fileVideo\n      };\n      alert(`Nom du fichier : ${this.state.nameVideo} - Fichier sélectionné : ${this.state.fileVideo} ​🎉​🍸​`);\n      /* Clean state */\n\n      this.setState({\n        nameVideo: '',\n        fileVideo: '',\n\n        /* Allows to write in a table all our inputs */\n        listVideo: [...this.state.listVideo, {\n          nameVideo: this.nameVideo,\n          fileVideo: this.fileVideo\n        }]\n      });\n      await axios.post(\"http://localhost:5000/upload\", { ...dataFile\n      }).then(res => console.log(\"Response de AXIOS\", res)).catch(error => console.error(\"Jaffiche mon erreur\", error));\n    };\n\n    this.renderList = () => {\n      return this.state.listVideo.map((item, index) => {\n        // item refers to the current value\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-elt\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.nameVideo, \" : \", item.fileVideo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload your video in low-res version on this platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name video :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nameVideo\",\n              placeholder: \"Name Video\",\n              value: this.state.nameVideo,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select your video :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"fileVideo\",\n              value: this.state.fileVideo,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload your video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sophi/Desktop/Videomenthe - Challenge/player-upload/front/src/components/Upload/index.js"],"names":["React","Component","axios","Header","Footer","Upload","state","nameVideo","fileVideo","listVideo","onChange","event","setState","target","name","value","console","log","handleSubmit","preventDefault","dataFile","alert","post","then","res","catch","error","renderList","map","item","index","render"],"mappings":"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","sourcesContent":["/* UPLOAD - INDEX.JS */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport './style.css';\r\n\r\nexport default class Upload extends Component {\r\n    state = {\r\n        nameVideo: '',\r\n        fileVideo: '', \r\n        listVideo: []\r\n    };\r\n\r\n    /* Event listener on data entry */\r\n    onChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        console.log(this.state.nameVideo);\r\n    };\r\n\r\n    /* Management of the submission form */\r\n    handleSubmit = async event => {\r\n        event.preventDefault();\r\n        const dataFile = {\r\n            nameVideo: this.state.nameVideo,\r\n            fileVideo: this.state.fileVideo\r\n        };\r\n        alert(\r\n            `Nom du fichier : ${this.state.nameVideo} - Fichier sélectionné : ${this.state.fileVideo} ​🎉​🍸​`\r\n        );\r\n        /* Clean state */\r\n        this.setState({\r\n            nameVideo: '',\r\n            fileVideo: '',\r\n            /* Allows to write in a table all our inputs */\r\n            listVideo: [...this.state.listVideo, {nameVideo: this.nameVideo, fileVideo: this.fileVideo}]\r\n        });\r\n       await axios\r\n            .post(\"http://localhost:5000/upload\", {...dataFile})\r\n            .then(res => console.log(\"Response de AXIOS\", res))\r\n            .catch(error => console.error(\"Jaffiche mon erreur\", error));\r\n    }\r\n\r\n    //! DON'T WORK\r\n    /* Rendering of inputs as a list  */\r\n    renderList = () => {\r\n        return this.state.listVideo.map((item, index) => { // item refers to the current value\r\n            return (\r\n                <div className=\"list\" key={index}>\r\n                    <ul className='list-elt'>\r\n                        <li>\r\n                            {item.nameVideo} : {item.fileVideo}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"div-upload\">\r\n                    <h3>Upload your video in low-res version on this platform</h3>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                            Name video :\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"nameVideo\"\r\n                                placeholder='Name Video'\r\n                                value={this.state.nameVideo} \r\n                                onChange={this.onChange} \r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Select your video :\r\n                            <input \r\n                                type=\"file\" \r\n                                name=\"fileVideo\" \r\n                                value={this.state.fileVideo} \r\n                                onChange={this.onChange} \r\n                            />\r\n                        </label>\r\n                        <button type=\"submit\">Upload your video</button>\r\n                    </form>\r\n                    {this.renderList()}\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}