{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sophi\\\\Desktop\\\\Videomenthe - Challenge\\\\player-upload\\\\front\\\\src\\\\components\\\\Files\\\\index.js\";\n\n/* FILES - INDEX.JS */\nimport React, { useState, useEffect } from 'react';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport axios from 'axios';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Files() {\n  var _s = $RefreshSig$();\n\n  // const [filesUploaded] = useState([]);\n  // useEffect(() => {\n  //     axios.get('http://localhost:5000/upload/')\n  //         .then(res => {\n  //             console.log(\"Je suis dans la route /files du front\", res);\n  //         })\n  //         .catch(error => {\n  //             console.log(\"J'affiche mon erreur\", error)\n  //         })\n  // })\n  //     return(\n  //         <div>\n  //             <Header />\n  //             <div className='hooks'>\n  //                <ul>\n  //                   {filesUploaded.map(file => <li key={file.name}>{filesUploaded.nameVideo}</li>)} \n  //                 </ul>\n  //             </div>\n  //             <Footer />\n  //         </div>\n  //     )\n  function MyDropzone() {\n    _s();\n\n    const onDrop = useCallback(acceptedFiles => {\n      acceptedFiles.forEach(file => {\n        const reader = new FileReader();\n\n        reader.onabort = () => console.log('file reading was aborted');\n\n        reader.onerror = () => console.log('file reading has failed');\n\n        reader.onload = () => {\n          // Do whatever you want with the file contents\n          const binaryStr = reader.result;\n          console.log(binaryStr);\n        };\n\n        reader.readAsArrayBuffer(file);\n      });\n    }, []);\n    const {\n      getRootProps,\n      getInputProps\n    } = useDropzone({\n      onDrop\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(MyDropzone, \"m2/zPeD393EJy9nRT3zys7UD7jw=\", true);\n}\n_c = Files;\n\nvar _c;\n\n$RefreshReg$(_c, \"Files\");","map":{"version":3,"sources":["C:/Users/sophi/Desktop/Videomenthe - Challenge/player-upload/front/src/components/Files/index.js"],"names":["React","useState","useEffect","Header","Footer","axios","Files","MyDropzone","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","readAsArrayBuffer","getRootProps","getInputProps","useDropzone"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA,WAASC,UAAT,GAAsB;AAAA;;AAClB,UAAMC,MAAM,GAAGC,WAAW,CAAEC,aAAD,IAAmB;AAC1CA,MAAAA,aAAa,CAACC,OAAd,CAAuBC,IAAD,IAAU;AAC5B,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,QAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAJ,QAAAA,MAAM,CAACK,OAAP,GAAiB,MAAMF,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAJ,QAAAA,MAAM,CAACM,MAAP,GAAgB,MAAM;AAClB;AACA,gBAAMC,SAAS,GAAGP,MAAM,CAACQ,MAAzB;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACH,SAJD;;AAKAP,QAAAA,MAAM,CAACS,iBAAP,CAAyBV,IAAzB;AACH,OAXD;AAaH,KAdyB,EAcvB,EAduB,CAA1B;AAeA,UAAM;AAAEW,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAkCC,WAAW,CAAC;AAAEjB,MAAAA;AAAF,KAAD,CAAnD;AAEA,wBACI,oBAASe,YAAY,EAArB;AAAA,8BACI,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAlD2B,KA0BnBjB,UA1BmB;AAmD/B;KAnDuBD,K","sourcesContent":["/* FILES - INDEX.JS */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\nimport './style.css';\r\n\r\nexport default function Files() {\r\n    // const [filesUploaded] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     axios.get('http://localhost:5000/upload/')\r\n    //         .then(res => {\r\n    //             console.log(\"Je suis dans la route /files du front\", res);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(\"J'affiche mon erreur\", error)\r\n    //         })\r\n    // })\r\n    //     return(\r\n    //         <div>\r\n    //             <Header />\r\n    //             <div className='hooks'>\r\n    //                <ul>\r\n    //                   {filesUploaded.map(file => <li key={file.name}>{filesUploaded.nameVideo}</li>)} \r\n    //                 </ul>\r\n    //             </div>\r\n\r\n    //             <Footer />\r\n    //         </div>\r\n    //     )\r\n\r\n\r\n    function MyDropzone() {\r\n        const onDrop = useCallback((acceptedFiles) => {\r\n            acceptedFiles.forEach((file) => {\r\n                const reader = new FileReader()\r\n\r\n                reader.onabort = () => console.log('file reading was aborted')\r\n                reader.onerror = () => console.log('file reading has failed')\r\n                reader.onload = () => {\r\n                    // Do whatever you want with the file contents\r\n                    const binaryStr = reader.result\r\n                    console.log(binaryStr)\r\n                }\r\n                reader.readAsArrayBuffer(file)\r\n            })\r\n\r\n        }, [])\r\n        const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n        return (\r\n            <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                <p>Drag 'n' drop some files here, or click to select files</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}