{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sophi\\\\Desktop\\\\Videomenthe - Challenge\\\\player-upload\\\\client\\\\src\\\\components\\\\Upload\\\\index.js\";\n\n/* UPLOAD - INDEX.JS */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Upload extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      /* Initially, no file is selected */\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      /* Update the state */\n      this.setState({\n        selectedFile: event.target.files[0]\n      }); // console.log(\"OnFileChange\", this.setState);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"infoFileUploaded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified:\", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.renderData = event => {\n      // this.setState({ selectedFile: event.target.files[0]});\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"renderData\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: this.state.selectedFile.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this);\n      }\n    };\n  }\n\n  /* On file upload (click the upload button) */\n  async onFileUpload() {\n    /* Create an object of formData */\n    const formData = new FormData();\n    /* formData allows you to capture the HTML form and submit it via axios - Update the formData object */\n\n    formData.append(\"myVideo\", this.state.selectedFile, this.state.selectedFile.name);\n    /* Details of the uploaded file */\n\n    console.log(this.state.selectedFile);\n    /* Request made to the backend api - Send formData object */\n\n    await axios.post(\"http://localhost:5000/upload\", formData);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Upload your video in low-res version on this platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"/upload\",\n          encType: \"multipart/form-data\",\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name video :\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"nameVideo\",\n              placeholder: \"Name Video\",\n              onChange: this.onFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"myVideo\",\n            onChange: this.onFileChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.onFileUpload,\n            children: \"Upload your video!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), this.fileData()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), this.renderData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/sophi/Desktop/Videomenthe - Challenge/player-upload/client/src/components/Upload/index.js"],"names":["React","Component","axios","Header","Footer","Upload","state","selectedFile","onFileChange","event","setState","target","files","fileData","name","type","lastModifiedDate","toDateString","renderData","onFileUpload","formData","FormData","append","console","log","post","render"],"mappings":"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","sourcesContent":["/* UPLOAD - INDEX.JS */\r\n\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Header from '../Header';\r\nimport Footer from '../Footer';\r\nimport './style.css';\r\n\r\n\r\nexport default class Upload extends Component {\r\n    state = {\r\n        /* Initially, no file is selected */\r\n        selectedFile: null,\r\n    };\r\n\r\n    /* On file select (from the pop up) */\r\n    onFileChange = event => {\r\n        /* Update the state */\r\n        this.setState({ selectedFile: event.target.files[0]});\r\n        // console.log(\"OnFileChange\", this.setState);\r\n    };\r\n\r\n    /* On file upload (click the upload button) */\r\n    async onFileUpload(){\r\n        /* Create an object of formData */\r\n        const formData = new FormData();\r\n\r\n        /* formData allows you to capture the HTML form and submit it via axios - Update the formData object */\r\n        formData.append(\r\n            \"myVideo\",\r\n            this.state.selectedFile,\r\n            this.state.selectedFile.name\r\n        );\r\n\r\n        /* Details of the uploaded file */\r\n        console.log(this.state.selectedFile);\r\n\r\n        /* Request made to the backend api - Send formData object */\r\n        await axios.post(\"http://localhost:5000/upload\", formData);\r\n    };\r\n\r\n    /* File content to be displayed after - File upload is complete */\r\n    fileData = () => {\r\n        if (this.state.selectedFile) {\r\n            return (\r\n                <div className=\"infoFileUploaded\">\r\n                    <h2>File Details:</h2>\r\n                    <p>File Name: {this.state.selectedFile.name}</p>\r\n                    <p>File Type: {this.state.selectedFile.type}</p>\r\n                    <p>\r\n                        Last Modified:{this.state.selectedFile.lastModifiedDate.toDateString()}\r\n                    </p>\r\n                </div>\r\n            );\r\n        } \r\n    };\r\n\r\n    /* Display file like list */\r\n    renderData = (event) => {\r\n        // this.setState({ selectedFile: event.target.files[0]});\r\n        if(this.state.selectedFile) {\r\n            return (\r\n                <div className=\"renderData\">\r\n                    <ul>\r\n                        <li>{this.state.selectedFile.name}</li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"div-upload\">\r\n                    <h3>Upload your video in low-res version on this platform</h3>\r\n                    <form action=\"/upload\" encType='multipart/form-data' method='POST'>\r\n                        <label>\r\n                            Name video :\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"nameVideo\"\r\n                                placeholder='Name Video'\r\n                                onChange={this.onFileChange}\r\n                            />\r\n                        </label>\r\n                        <input \r\n                            type=\"file\" \r\n                            name=\"myVideo\" \r\n                            onChange={this.onFileChange} required />\r\n                        <button\r\n                            onClick={this.onFileUpload}>\r\n                            Upload your video!\r\n                        </button>\r\n                        {this.fileData()}\r\n                    </form>\r\n                    {this.renderData()}\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}